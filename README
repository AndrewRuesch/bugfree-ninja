README

ABOUT

	This is a program that I wrote for Data Structures and Algorithm Analysis class. The assignemt was to implement a system
	to read a document and count the word frequencies. Please refer to P3.pdf for a detailed discription of the assignment. Thanks!

TO RUN

	Please compile WordCounter.java, which will compile all the other code. When you run WordCounter, you will 
	be prompted to enter the name of the input file you want to analyze, and the name for an output file that the
	list of words and their frequencies will be printed to.
	
	After the program does this, you will be asked if you would like to print the entire hash table to the terminal. 
	If yes, please make sure you have disabled word wrap on your terminal, otherwise the output will look very bad as the 
	(potentially) long collision lists will wrap around.
	
NOTES ABOUT IMPLEMENTATION

	To implement the hash table, I wrote an array to represent the slots in the table. If a given slot has a collision
	list, this is represented with a singly linked list (Chain.java).
	
	I chose to use an initial table size of 2^10. This seemed to work pretty well, as with the big file, test_file, it 
	gave a collision list length of ~ 2.
	
	NOTE: The homework said to write a method wordCount(String input_file), but I changed it slightly to 
	wordCount(String input_file, String output_file), because the "Deliverables" section of the homework said
	that the code should also take a String for the output file name. 


		
FILES INCLUDED

	ChainNode.java       - a linked list node
	Chain.java           - a linked list
	HashTable.java       - a hash table 
	WordCounter.java     - contains main(), prompts user for input and output file names
	
	toy.txt              - a short text file for testing, contains list of animal names, like in the lectures
	toy_output.txt       - the output generated with toy.txt as input
	test_file.txt        - the large input file, from programming assignment 2, which is ~ 100k
	test_file_output.txt - the output file generated with test_file.txt as input
	
	
	
	
